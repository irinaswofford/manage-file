{"version":3,"sources":["App/index.module.css","Files/index.module.css","api.js","Files/use-files.js","Files/index.js","App/index.js","serviceWorker.js","index.js"],"names":["module","exports","files","id","versions","name","a","fileName","newFile","length","push","fileId","file","find","f","sort","b","versionId","unshift","useFiles","useState","setFiles","setIsSortAscending","useEffect","getFiles","then","sortFileNamesAscending","aa","bb","sortFileNamesDescending","File","isSortAscending","reRenderGrid","className","styles","onClick","newName","window","prompt","trim","addVersion","Math","random","alert","map","version","key","Files","React","handleClick_addNewFile","event","addFile","title","index","App","app","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d31da486.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1ua8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file\":\"Files_file__1SZHk\"};","const files = [\n  {\n    id: 'the-file-id-1',\n    versions: [\n      { id: 1, name: 'test.txt' },\n      { id: 0, name: 'test.txt' },\n    ],\n  },\n  {\n    id: 'the-file-id-2',\n    versions: [\n      { id: 1, name: 'recipes.doc' },\n      { id: 0, name: 'recipes.doc' },\n    ],\n  },\n  {\n    id: 'the-file-id-3',\n    versions: [\n      { id: 1, name: 'picture.png' },\n      { id: 0, name: 'photo.png' },\n    ],\n  },\n  {\n    id: 'the-file-id-4',\n    versions: [\n      { id: 1, name: 'zebra.png' },\n      { id: 0, name: 'zebra.png' },\n    ],\n  },\n  {\n    id: 'the-file-id-5',\n    versions: [\n      { id: 1, name: 'acrobat.png' },\n      { id: 0, name: 'acrobat.png' },\n    ],\n  }\n];\n\nexport async function getFiles() {\n  return files;\n}\n\nexport async function addFile(fileName) {\n  // TODO: Implement this API to add a new file according to task (5).\n\n\n\n  let newFile = {\n    id: `the-file-id-${files.length + 1}`,\n    versions: [\n      { id: 0, name: fileName }\n    ],\n  }\n\n  files.push(newFile);\n}\n\nexport async function addVersion(fileId, name) {\n\n\n  // TODO: Insert the new version on the beginning of the stack according to task (1)\n  const file = files.find(f => f.id === fileId);\n\n  // sort versions ascending\n  file.versions.sort((a, b) => (a.id > b.id) ? 1 : -1);\n\n  // create new versionId\n  const versionId = file.versions[file.versions.length - 1].id + 1;\n\n  // use unshift to add new version at start of array\n  file.versions.unshift({ id: versionId, name });\n\n  // sort versions descending\n  file.versions.sort((a, b) => (a.id > b.id) ? -1 : 1);\n\n\n}\n\n\n","import { useEffect, useState } from 'react';\nimport { getFiles } from '../api';\n\n\n\nexport function useFiles() {\n\n  const [files, setFiles] = useState([]);\n  const [isSortAscending, setIsSortAscending] = useState(true);\n\n  useEffect(() => {\n    getFiles()\n      .then(files => {\n\n        // sort ascending onload\n        files = sortFileNamesAscending(files);\n\n        // set state\n        setIsSortAscending(false);\n        setFiles(files);\n\n      });\n  }, []);\n\n\n\n  \n\n  return files;\n}\n\nexport function sortFileNamesAscending(files) {\n\n  // sort files\n  files.sort((a, b) => {\n\n    // validation\n    if (a.versions.length === 0 || b.versions.length === 0) {\n      return -1;\n    }\n\n    // sort versions descending\n    a.versions = a.versions.sort((aa, bb) => (aa.id > bb.id) ? -1 : 1);\n    b.versions = b.versions.sort((aa, bb) => (aa.id > bb.id) ? -1 : 1);\n\n    // un-pack\n    let aCurrentVersionName = a.versions[0][\"name\"] || \"\";\n    let bCurrentVersionName = b.versions[0][\"name\"] || \"\";\n\n    if (aCurrentVersionName > bCurrentVersionName) {\n      return 1;\n    }\n    else {\n      return -1;\n    }\n  });\n\n  return files;\n}\n\nexport function sortFileNamesDescending(files) {\n\n  // sort files\n  files.sort((a, b) => {\n\n    // validation\n    if (a.versions.length === 0 || b.versions.length === 0) {\n      return -1;\n    }\n\n    // sort versions descending\n    a.versions = a.versions.sort((aa, bb) => (aa.id > bb.id) ? -1 : 1);\n    b.versions = b.versions.sort((aa, bb) => (aa.id > bb.id) ? -1 : 1);\n\n    // un-pack\n    let aCurrentVersionName = a.versions[0][\"name\"] || \"\";\n    let bCurrentVersionName = b.versions[0][\"name\"] || \"\";\n\n    if (aCurrentVersionName < bCurrentVersionName) {\n      return 1;\n    }\n    else {\n      return -1;\n    }\n  });\n\n  return files;\n}\n\n\n\n","import React from 'react';\nimport { useFiles, sortFileNamesAscending, sortFileNamesDescending } from './use-files';\nimport { addVersion, addFile } from '../api';\nimport styles from './index.module.css';\n\n\n// TODO: Improve the implementation of this component according to task (4)\nfunction File({ file, files, isSortAscending, reRenderGrid }) {\n\n  const onRename = () => {\n\n    let newName = window.prompt('Rename this file');\n    let wasClickedCancel = typeof newName === \"undefined\" || newName === null;\n\n    // exit on cancel\n    if (wasClickedCancel) {\n      return; // exit\n    }\n\n    // validation\n    newName = (newName || \"\").trim();\n    if (newName === \"\") {\n      alert(\"invalid filename, please re-enter.\");\n      return;\n    }\n\n    // addVersion\n    addVersion(file.id, newName);\n\n    // ensure proper sorting (newly added name changes alphabetical order)\n    if (isSortAscending === true) {\n      sortFileNamesDescending(files);\n    }\n    else if (isSortAscending === false) {\n      sortFileNamesAscending(files);\n    }\n\n    // triggers re-render\n    reRenderGrid(Math.random());\n  }\n\n  return (\n    <div className={`${styles.file} divReadoutHolder`}>\n\n      <div className=\"divFileNameAndButton\">\n        <span>File Name:&nbsp;</span>\n        <strong>{file.versions[0].name}</strong>\n        <button className=\"buttonAddNewVersion\" onClick={onRename}>Rename File </button>\n      </div>\n\n      <div>File Version History:</div>\n\n      <ul className=\"ulVersions\">\n        {file.versions.map(version => (\n\n          <li key={version.id}>\n            <span>Id:&nbsp;{version.id}</span>&nbsp;&nbsp;&nbsp;<span>Name:&nbsp;{version.name}</span>\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n}\n\n\n\nexport default function Files() {\n\n  // TODO: Replace this polling-like implementation according to task (2)\n  // const [state, setState] = React.useState();\n  // setInterval(() => setState(Math.random()), 1000);\n\n  //alert(\"called Files\");\n\n  const files = useFiles();\n  const [isSortAscending, setIsSortAscending] = React.useState(false);\n  const [grid, reRenderGrid] = React.useState(false);\n\n\n  // handleClick toggleSortAscending\n  const handleClick_toggleSortAscending = (event) => {\n\n    if (isSortAscending === true) {\n\n      // sortFileNamesAscending\n      sortFileNamesAscending(files);\n\n      // update state\n      setIsSortAscending(false);\n    }\n    else if (isSortAscending === false) {\n\n      // sortFileNamesDescending\n      sortFileNamesDescending(files);\n\n      // update state\n      setIsSortAscending(true);\n    }\n  };\n\n  const handleClick_addNewFile = (event) => {\n\n    let fileName = window.prompt('Add new file. Enter filename:');\n    let wasClickedCancel = typeof fileName === \"undefined\" || fileName === null;\n\n    // exit on cancel\n    if (wasClickedCancel) {\n      return; // exit\n    }\n\n    // validation\n    fileName = (fileName || \"\").trim();\n    if (fileName === \"\") {\n      alert(\"invalid filename, please re-enter.\");\n      return;\n    }\n\n    // addVersion\n    addFile(fileName);\n\n    // ensure proper sorting (newly added name changes alphabetical order)\n    if (isSortAscending === true) {\n      sortFileNamesDescending(files);\n    }\n    else if (isSortAscending === false) {\n      sortFileNamesAscending(files);\n    }\n\n    // triggers re-render\n    reRenderGrid(Math.random());\n  };\n\n\n\n\n\n  return (\n\n    <div>\n\n\n      <div className=\"divUIHolder\">\n\n        <div className=\"divCaption\">\n          <button onClick={event => handleClick_addNewFile(event)}>Add New File</button>\n        </div>\n\n\n        {/* TODO: Implement sort feature according to task (3) */}\n\n        <div className=\"divCaption\">\n          <button onClick={event => handleClick_toggleSortAscending(event)} className=\"buttonSort\" title=\"Toggle Sort Ascending/Descending\">\n            {isSortAscending === true ? \"Sort A-Z\" : \"Sort Z-A\"}\n          </button>\n        </div>\n\n\n        {\n          files.map((file, index) => {\n            return <File file={file} files={files} isSortAscending={isSortAscending} reRenderGrid={reRenderGrid} key={file.id}></File>\n          })\n        }\n\n        {/* TODO: Add a button to add a new file according to task (5) */}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport styles from './index.module.css';\n\nimport Files from '../Files';\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Files />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}